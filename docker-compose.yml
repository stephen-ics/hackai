version: '3.8'

services:
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    ports:
      - "8000:8000"
    environment:
      # Basic configuration
      - ENV=production
      - DEBUG=false
      - HOST=0.0.0.0
      - PORT=8000
      
      # CORS configuration
      - CORS_ORIGINS=http://localhost:3000,https://yourapp.com,https://www.yourapp.com
      
      # Storage configuration (S3 or local)
      - USE_S3=${USE_S3:-false}
      - AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID}
      - AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY}
      - AWS_REGION=${AWS_REGION:-us-east-1}
      - S3_BUCKET=${S3_BUCKET}
      - S3_BUCKET_URL=${S3_BUCKET_URL}
      
      # Security
      - SECRET_KEY=${SECRET_KEY:-your-secret-key-change-in-production}
      
      # API Keys
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      
      # FFmpeg configuration
      - USE_SYSTEM_FFMPEG=1
      - FFMPEG_BINARY=/usr/bin/ffmpeg
      
      # Rate limiting
      - RATE_LIMIT_ENABLED=${RATE_LIMIT_ENABLED:-false}
      - MAX_JOBS_PER_USER=${MAX_JOBS_PER_USER:-5}
      
      # Video processing limits
      - MAX_VIDEO_DURATION=${MAX_VIDEO_DURATION:-3600}
      - MAX_CLIP_COUNT=${MAX_CLIP_COUNT:-10}
    volumes:
      # Only mount if not using S3
      - ./data/clips:/app/output_clips
      - ./data/temp:/app/temp
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
      args:
        - NEXT_PUBLIC_API_BASE_URL=${NEXT_PUBLIC_API_BASE_URL:-http://localhost:8000}
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=production
      - NEXT_PUBLIC_API_BASE_URL=${NEXT_PUBLIC_API_BASE_URL:-http://backend:8000}
    depends_on:
      - backend
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:3000"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s

  # Optional: Nginx reverse proxy for production
  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./ssl:/etc/nginx/ssl:ro  # SSL certificates
    depends_on:
      - frontend
      - backend
    restart: unless-stopped
    profiles:
      - production

volumes:
  clips_data:
  temp_data:

networks:
  default:
    name: youtube-shorts-network 